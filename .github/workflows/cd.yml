name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  PROJECT_NAME: icemodoro

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            suffix: ""
          - target: x86_64-apple-darwin
            os: macos-latest
            suffix: ""
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
            suffix: ".exe"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust toolchain and cargo-strip
        uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-strip
          targets: ${{ matrix.target }}
        env:
          # Is this fixing the sporadic `402 Payment Required` error when downloading from vercel?
          # https://github.com/cargo-bins/cargo-quickinstall/issues/268#issuecomment-2312861638
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Windows (MinGW) linker
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update -y && sudo apt-get install -y gcc-mingw-w64-x86-64

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
        env:
          # Set the linker for the Windows target, references:
          # - https://doc.rust-lang.org/cargo/reference/config.html#environment-variables
          # - https://doc.rust-lang.org/cargo/reference/environment-variables.html#configuration-environment-variables
          # - https://doc.rust-lang.org/cargo/appendix/glossary.html#target
          CARGO_TARGET_X86_64_PC_WINDOWS_GNU_LINKER: x86_64-w64-mingw32-gcc

      - name: Strip binary
        run: cargo strip --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-${{ matrix.target }}${{ matrix.suffix }}
          path: target/${{ matrix.target }}/release/${{ env.PROJECT_NAME }}-${{ matrix.target }}${{ matrix.suffix }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # TODO: zip the artifacts
      - name: Create Release and Upload Binaries
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*/*
